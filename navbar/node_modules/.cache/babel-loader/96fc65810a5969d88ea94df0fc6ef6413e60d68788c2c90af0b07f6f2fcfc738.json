{"ast":null,"code":"var _jsxFileName = \"D:\\\\Front-end Class\\\\Project\\\\Navbar-React\\\\navbar\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConditionalListRendering() {\n  _s();\n  const [showAvailable, setShowAvailable] = useState(true);\n  const items = [{\n    id: 1,\n    name: 'Apple',\n    available: true\n  }, {\n    id: 2,\n    name: 'Banana',\n    available: false\n  }, {\n    id: 3,\n    name: 'Cherry',\n    available: true\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAvailable(!showAvailable),\n      children: showAvailable ? 'Show All Items' : 'Show Available Only'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.filter(item => showAvailable ? item.available : true) // Toggle the filter based on state\n      .map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item.name\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(ConditionalListRendering, \"XGqreO0PJeKF2zne9lqn6qpwdUA=\");\n_c = ConditionalListRendering;\nexport default ConditionalListRendering;\nvar _c;\n$RefreshReg$(_c, \"ConditionalListRendering\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConditionalListRendering","_s","showAvailable","setShowAvailable","items","id","name","available","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","filter","item","map","_c","$RefreshReg$"],"sources":["D:/Front-end Class/Project/Navbar-React/navbar/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ConditionalListRendering() {\n  const [showAvailable, setShowAvailable] = useState(true);\n  const items = [\n    { id: 1, name: 'Apple', available: true },\n    { id: 2, name: 'Banana', available: false },\n    { id: 3, name: 'Cherry', available: true },\n  ];\n\n  return (\n    <div>\n      <button onClick={() => setShowAvailable(!showAvailable)}>\n        {showAvailable ? 'Show All Items' : 'Show Available Only'}\n      </button>\n      <ul>\n        {items\n          .filter((item) => showAvailable ? item.available : true) // Toggle the filter based on state\n          .map((item) => (\n            <li key={item.id}>{item.name}</li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ConditionalListRendering;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,wBAAwBA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMO,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAK,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAK,CAAC,CAC3C;EAED,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAQU,OAAO,EAAEA,CAAA,KAAMN,gBAAgB,CAAC,CAACD,aAAa,CAAE;MAAAM,QAAA,EACrDN,aAAa,GAAG,gBAAgB,GAAG;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACTd,OAAA;MAAAS,QAAA,EACGJ,KAAK,CACHU,MAAM,CAAEC,IAAI,IAAKb,aAAa,GAAGa,IAAI,CAACR,SAAS,GAAG,IAAI,CAAC,CAAC;MAAA,CACxDS,GAAG,CAAED,IAAI,iBACRhB,OAAA;QAAAS,QAAA,EAAmBO,IAAI,CAACT;MAAI,GAAnBS,IAAI,CAACV,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACZ,EAAA,CAtBQD,wBAAwB;AAAAiB,EAAA,GAAxBjB,wBAAwB;AAwBjC,eAAeA,wBAAwB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}